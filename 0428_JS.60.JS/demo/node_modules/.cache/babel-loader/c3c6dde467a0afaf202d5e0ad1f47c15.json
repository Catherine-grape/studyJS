{"remainingRequest":"/Users/fivegl/Desktop/demo/node_modules/babel-loader/lib/index.js!/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fivegl/Desktop/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fivegl/Desktop/demo/src/pages/customer/customerAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fivegl/Desktop/demo/src/pages/customer/customerAdd.vue","mtime":1619748639142},{"path":"/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/fivegl/Desktop/demo/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addCustomer, queryCustomerInfo, updateCustomer } from \"../../api/main\";\n\nvar validatePass2 = function validatePass2(rule, value, callback) {\n  // 此函数是用来进行自定义校验的，当不校验通过之后，就调用callback并且给他传递一个new Error('xxxxxx')  ,  如果通过就直接执行callback()\n  var reg = /^1[3-8]\\d{9}$/;\n\n  if (!reg.test(value)) {\n    callback(new Error(\"手机号格式不对\"));\n  } else {\n    callback();\n  }\n};\n\nexport default {\n  name: 'add',\n  data: function data() {\n    return {\n      form: {\n        name: \"\",\n        sex: 0,\n        email: \"\",\n        phone: \"\",\n        QQ: \"\",\n        weixin: \"\",\n        type: '重点客户',\n        address: ''\n      },\n      rules: {\n        phone: [{\n          required: true,\n          message: \"请输入输入电话\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass2,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  activated: function activated() {\n    console.log(123);\n  },\n  created: function created() {\n    var _this = this;\n\n    console.log('我是新增，重新加载'); //   console.log(this.$route.query);\n\n    var id = this.$route.query.id; // 如果当前的id有值，说明是从点击编辑按钮哪里过来的，这时候去请求客户详细信息，并且渲染到页面。如果没有id那说明是点击新增客户按钮进来的，这时候不需要请求客户信息。\n\n    if (id || id == 0) {\n      queryCustomerInfo({\n        customId: id\n      }).then(function (result) {\n        var code = result.code,\n            data = result.data;\n\n        if (code == 0) {\n          var name = data.name,\n              sex = data.sex,\n              email = data.email,\n              weixin = data.weixin,\n              QQ = data.QQ,\n              phone = data.phone,\n              type = data.type,\n              address = data.address;\n          _this.form = {\n            name: name,\n            sex: sex,\n            email: email,\n            weixin: weixin,\n            QQ: QQ,\n            phone: phone,\n            type: type,\n            address: address\n          };\n        }\n      });\n    }\n  },\n  methods: {\n    submit: function submit() {\n      var _this2 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (!valid) {\n          _this2.$message.error('请按规则填写表单');\n\n          return;\n        } //   发送新增的接口请求\n        // 或者修改的接口\n\n\n        var id = _this2.$route.query.id;\n        var form = _this2.form;\n\n        if (id || id == 0) {\n          updateCustomer(_objectSpread({\n            customerId: id\n          }, form)).then(function (result) {\n            var code = result.code;\n\n            if (code == 0) {\n              _this2.$alert('恭喜您修改成功', {\n                callback: function callback() {\n                  _this2.$router.push({\n                    path: '/customer/list',\n                    query: {\n                      type: 'my'\n                    }\n                  });\n                }\n              });\n            }\n          });\n          return;\n        }\n\n        addCustomer(form).then(function (result) {\n          var code = result.code;\n\n          if (code == 0) {\n            _this2.$alert('恭喜您，新增成功', {\n              callback: function callback() {\n                _this2.$router.push({\n                  path: '/customer/list',\n                  query: {\n                    type: 'my'\n                  }\n                });\n              }\n            });\n          }\n        });\n        console.log('正常提交');\n      });\n    },\n    reset: function reset() {\n      this.$refs.form.resetFields();\n    }\n  }\n};",{"version":3,"sources":["customerAdd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h2>我是新增页面</h2>\n    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" :rules=\"rules\">\n      <el-form-item label=\"客户名\" prop=\"name\">\n        <el-input v-model=\"form.name\" ></el-input>\n      </el-form-item>\n      <el-form-item label=\"性别\" prop=\"sex\">\n        <el-radio-group v-model=\"form.sex\">\n          <el-radio :label=\"0\">男</el-radio>\n          <el-radio :label=\"1\">女</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input v-model=\"form.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"电话\" prop=\"phone\">\n        <el-input v-model=\"form.phone\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"QQ\" prop=\"QQ\">\n        <el-input v-model=\"form.QQ\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"weixin\" prop=\"weixin\">\n        <el-input v-model=\"form.weixin\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"地址\" prop=\"address\">\n        <el-input type=\"textarea\" v-model=\"form.address\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"活动区域\" prop=\"type\">\n        <el-select v-model=\"form.type\" placeholder=\"请输入活动类型\">\n          <el-option label=\"重点客户\" value=\"重点客户\"></el-option>\n          <el-option label=\"放弃客户\" value=\"放弃客户\"></el-option>\n          <el-option label=\"一般客户\" value=\"一般客户\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submit\">立即创建</el-button>\n        <el-button @click=\"reset\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n<script>\nimport {addCustomer, queryCustomerInfo,updateCustomer} from '../../api/main'\nvar validatePass2 = (rule, value, callback) => {\n  // 此函数是用来进行自定义校验的，当不校验通过之后，就调用callback并且给他传递一个new Error('xxxxxx')  ,  如果通过就直接执行callback()\n  let reg = /^1[3-8]\\d{9}$/;\n  if (!reg.test(value)) {\n    callback(new Error(\"手机号格式不对\"));\n  } else {\n    callback();\n  }\n};\nexport default {\n  name:'add',\n  data() {\n    return {\n      form: {\n        name: \"\",\n        sex: 0,\n        email: \"\",\n        phone: \"\",\n        QQ: \"\",\n        weixin: \"\",\n        type:'重点客户',\n        address:''\n      },\n      rules: {\n        phone: [\n          { required: true, message: \"请输入输入电话\", trigger: \"blur\" },\n          { validator: validatePass2, trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  activated(){\n    console.log(123);\n  },\n  created(){\n    console.log('我是新增，重新加载');\n    //   console.log(this.$route.query);\n    let {id}=this.$route.query;\n    // 如果当前的id有值，说明是从点击编辑按钮哪里过来的，这时候去请求客户详细信息，并且渲染到页面。如果没有id那说明是点击新增客户按钮进来的，这时候不需要请求客户信息。\n    if(id || id==0){\n        queryCustomerInfo({customId:id}).then((result)=>{\n            let {code,data} =result;\n            if(code==0){\n                let {name,sex,email,weixin,QQ,phone,type,address}=data;\n                this.form={name,sex,email,weixin,QQ,phone,type,address}\n            }\n        })\n    }\n  },\n  methods:{\n    submit(){\n      this.$refs.form.validate((valid) => {\n          if (!valid) {\n            this.$message.error('请按规则填写表单');\n\n            return\n          } \n        //   发送新增的接口请求\n        // 或者修改的接口\nlet {id}=this.$route.query;\n          let {form}=this;\n          if(id||id==0){\n              updateCustomer({\n                  customerId:id,\n                  ...form\n              }).then((result)=>{\n                  let {code}=result;\n                  if(code==0){\n                      this.$alert('恭喜您修改成功',{\n                          callback:()=>{\n                              this.$router.push({\n                                  path:'/customer/list',\n                                  query:{type:'my'}\n                              })\n                          }\n                      })\n                  }\n              });\n              return;\n          }\n          addCustomer(form).then((result)=>{\n              let {code}=result;\n              if(code==0){\n                  this.$alert('恭喜您，新增成功',{\n                      callback:()=>{\n                          this.$router.push({\n                              path:'/customer/list',\n                              query:{type:'my'}\n                          })\n                      }\n                      \n                  })\n                  \n              }\n          })\n          console.log('正常提交');\n        });\n    },\n    reset(){\n       this.$refs.form.resetFields();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\">\n</style>"],"sourceRoot":"src/pages/customer"}]}