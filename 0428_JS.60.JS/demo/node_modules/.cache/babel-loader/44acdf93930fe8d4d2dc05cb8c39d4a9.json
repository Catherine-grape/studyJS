{"remainingRequest":"/Users/fivegl/Desktop/demo/node_modules/babel-loader/lib/index.js!/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fivegl/Desktop/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fivegl/Desktop/demo/src/pages/customer/customerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fivegl/Desktop/demo/src/pages/customer/customerList.vue","mtime":1619683920343},{"path":"/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getCustomerList } from \"../../api/customer\";\nexport default {\n  data: function data() {\n    return {\n      type: \"\",\n      search: \"\",\n      tableData: [{\n        name: \"\",\n        sex: \"王小虎\",\n        email: \"\",\n        phone: \"\",\n        weixin: \"\",\n        QQ: \"\",\n        address: \"上海市普陀区金沙江路 1518 弄\",\n        userName: \"\"\n      }],\n      limit: 10,\n      page: 1,\n      total: 0\n    };\n  },\n  created: function created() {\n    this.queryData();\n  },\n  methods: {\n    change: function change(value) {\n      console.log(value);\n      this.page = 1;\n      this.queryData();\n    },\n    queryData: function queryData() {\n      var _this = this;\n\n      getCustomerList({\n        lx: this.$route.query.type || \"my\",\n        type: this.type,\n        search: this.search,\n        limit: this.limit,\n        page: this.page\n      }).then(function (result) {\n        var code = result.code,\n            data = result.data,\n            total = result.total;\n\n        if (code == 0) {\n          _this.tableData = data;\n          _this.total = total;\n        } else {\n          _this.tableData = [];\n          _this.total = 0;\n        }\n      });\n    },\n    changeSize: function changeSize(value) {\n      //   console.log(value);\n      this.page = value;\n      this.queryData();\n    },\n    jump: function jump(scope) {\n      this.$router.push({\n        path: \"/customer/add\",\n        query: {\n          id: scope.row.id\n        }\n      });\n    }\n  },\n  watch: {\n    //侦听器\n    $route: function $route() {\n      //   因为当前我的客户和全部客户公用一个组件，虽然是不同的路由，但是渲染的是同一个组件，这样也就导致了组件不会重新加载，它的钩子函数不会重新执行，咱们可以监听这个$route的变化，只要路由发生变化，那这个watch就能够监听到$route的变化。当路由发生变化之后，就可以重新请求数据了。\n      console.log(this.$route.query, 169);\n      this.queryData();\n    }\n  }\n};",{"version":3,"sources":["customerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA,SAAA,eAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,MAAA,EAAA,EALA;AAMA,QAAA,EAAA,EAAA,EANA;AAOA,QAAA,OAAA,EAAA,mBAPA;AAQA,QAAA,QAAA,EAAA;AARA,OADA,CAHA;AAeA,MAAA,KAAA,EAAA,EAfA;AAgBA,MAAA,IAAA,EAAA,CAhBA;AAiBA,MAAA,KAAA,EAAA;AAjBA,KAAA;AAmBA,GArBA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,SAAA,SAAA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,WAAA,IAAA,GAAA,CAAA;AACA,WAAA,SAAA;AACA,KALA;AAMA,IAAA,SANA,uBAMA;AAAA;;AACA,MAAA,eAAA,CAAA;AACA,QAAA,EAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,IAAA,IADA;AAEA,QAAA,IAAA,EAAA,KAAA,IAFA;AAGA,QAAA,MAAA,EAAA,KAAA,MAHA;AAIA,QAAA,KAAA,EAAA,KAAA,KAJA;AAKA,QAAA,IAAA,EAAA,KAAA;AALA,OAAA,CAAA,CAMA,IANA,CAMA,UAAA,MAAA,EAAA;AAAA,YACA,IADA,GACA,MADA,CACA,IADA;AAAA,YACA,IADA,GACA,MADA,CACA,IADA;AAAA,YACA,KADA,GACA,MADA,CACA,KADA;;AAEA,YAAA,IAAA,IAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,SAHA,MAGA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,CAAA;AACA;AACA,OAfA;AAgBA,KAvBA;AAwBA,IAAA,UAxBA,sBAwBA,KAxBA,EAwBA;AACA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,WAAA,SAAA;AACA,KA5BA;AA6BA,IAAA,IA7BA,gBA6BA,KA7BA,EA6BA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,EAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AADA;AAFA,OAAA;AAMA;AApCA,GAzBA;AA+DA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,MAFA,oBAEA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,EAAA,GAAA;AACA,WAAA,SAAA;AACA;AANA;AA/DA,CAAA","sourcesContent":["\n<template>\n  <div>\n    <div class=\"header\">\n      <!-- 我是客户列表 -->\n      <el-select v-model=\"type\" placeholder=\"请选择\" @change=\"change\">\n        <el-option label=\"全部客户\" value=\"\"> </el-option>\n        <el-option label=\"重点客户\" value=\"重点客户\"> </el-option>\n        <el-option label=\"一般客户\" value=\"一般客户\"> </el-option>\n        <el-option label=\"放弃客户\" value=\"放弃客户\"> </el-option>\n      </el-select>\n      <el-input\n        class=\"input\"\n        v-model=\"search\"\n        placeholder=\"请输入搜索内容\"\n        @change=\"change\"\n      ></el-input>\n    </div>\n    <el-divider content-position=\"left\">少年包青天</el-divider>\n    <div class=\"tableBox\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" border>\n        <el-table-column\n          prop=\"name\"\n          label=\"姓名\"\n          align=\"center\"\n          min-width=\"10%\"\n        >\n        </el-table-column>\n        <el-table-column prop=\"sex\" label=\"性别\" align=\"center\" min-width=\"8%\">\n        </el-table-column>\n        <el-table-column\n          prop=\"email\"\n          label=\"邮箱\"\n          align=\"center\"\n          show-overflow-tooltip\n          min-width=\"20%\"\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"phone\"\n          label=\"电话\"\n          align=\"center\"\n          min-width=\"10%\"\n          show-overflow-tooltip\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"weixin\"\n          label=\"微信\"\n          align=\"center\"\n          min-width=\"10%\"\n          show-overflow-tooltip\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"QQ\"\n          label=\"QQ\"\n          align=\"center\"\n          show-overflow-tooltip\n          min-width=\"10%\"\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"address\"\n          label=\"类型\"\n          align=\"center\"\n          show-overflow-tooltip\n          min-width=\"15%\"\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"userName\"\n          label=\"隶属人\"\n          align=\"center\"\n          min-width=\"15%\"\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"address\"\n          label=\"地址\"\n          align=\"center\"\n          show-overflow-tooltip\n          min-width=\"30%\"\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"address\"\n          label=\"操作\"\n          align=\"center\"\n          min-width=\"25%\"\n        >\n        <el-button type=\"text\">删除</el-button>\n        <template slot-scope=\"scope\">\n        <el-button type=\"text\" @click=\"jump(scope)\">编辑</el-button>\n        <el-button type=\"text\">回访</el-button>\n        </template>\n        </el-table-column>\n        \n      </el-table>\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :total=\"total\"\n        @current-change=\"changeSize\"\n        v-show=\"total\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getCustomerList } from \"../../api/customer\";\n\nexport default {\n  data() {\n    return {\n      type: \"\",\n      search: \"\",\n      tableData: [\n        {\n          name: \"\",\n          sex: \"王小虎\",\n          email: \"\",\n          phone: \"\",\n          weixin: \"\",\n          QQ: \"\",\n          address: \"上海市普陀区金沙江路 1518 弄\",\n          userName: \"\",\n        },\n      ],\n      limit: 10,\n      page: 1,\n      total: 0,\n    };\n  },\n  created() {\n    this.queryData();\n  },\n  methods: {\n    change(value) {\n      console.log(value);\n      this.page = 1;\n      this.queryData();\n    },\n    queryData() {\n      getCustomerList({\n        lx: this.$route.query.type || \"my\",\n        type: this.type,\n        search: this.search,\n        limit: this.limit,\n        page: this.page,\n      }).then((result) => {\n        let { code, data, total } = result;\n        if (code == 0) {\n          this.tableData = data;\n          this.total = total;\n        } else {\n          this.tableData = [];\n          this.total = 0;\n        }\n      });\n    },\n    changeSize(value) {\n      //   console.log(value);\n      this.page = value;\n      this.queryData();\n    },\n    jump(scope) {\n      this.$router.push({\n        path: \"/customer/add\",\n        query: {\n          id: scope.row.id,\n        },\n      });\n    },\n  },\n  watch: {\n    //侦听器\n    $route() {\n      //   因为当前我的客户和全部客户公用一个组件，虽然是不同的路由，但是渲染的是同一个组件，这样也就导致了组件不会重新加载，它的钩子函数不会重新执行，咱们可以监听这个$route的变化，只要路由发生变化，那这个watch就能够监听到$route的变化。当路由发生变化之后，就可以重新请求数据了。\n      console.log(this.$route.query, 169);\n      this.queryData();\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  .input {\n    width: 200px;\n    margin-left: 10px;\n  }\n}\n</style>"],"sourceRoot":"src/pages/customer"}]}