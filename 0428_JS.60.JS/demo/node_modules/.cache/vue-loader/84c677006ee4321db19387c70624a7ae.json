{"remainingRequest":"/Users/fivegl/Desktop/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fivegl/Desktop/demo/src/pages/customer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fivegl/Desktop/demo/src/pages/customer/index.vue","mtime":1619748974134},{"path":"/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fivegl/Desktop/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import Vue from \"vue\";\n\nexport default {\n  data(){\n    return{\n      // arr:['a','b'],\n      flag:'allcustomer'\n    }\n  },\n  methods: {\n    select(index) {\n      // console.log(index);\n      let ary = [\n        \"/customer/list?type=my\",\n        \"/customer/list?type=all\",\n        \"/customer/add\",\n      ];\n      let path=ary[index]\n      let href=location.href;\n    //   如果前一次和后一次跳转的path是一样的那router会在控制台报错，为了解决这个问题，在路由跳转的时候，判断一下当前页面的url是否包含即将跳转的path值，如果一样，说明要跳转的是同一个组件，就直接return就好\n      if(href.includes(path))return\n      \n      this.$router.push(path); \n\n    },\n    changeActive(){\n      let url=location.href;\n      let [a,b]=url.split('#');\n      let [c,d]=b.split('?')\n      console.log(a,b,c,d);\n      if(b.includes('/customer/list')){\n        if(d==undefined||d==\"type=my\"){\n        return '0'\n      }else{\n        return '1'\n      }\n      /* if(d=='type=all'){\n        return '1'\n      } */\n      }\n      \n      return '2'\n    }\n  },\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/customer","sourcesContent":["// 主组件\n\n<template>\n  <div class=\"container\">\n    <div class=\"left\">\n      <!-- <ul>\n        <router-link to=\"/customer/list\" tag=\"li\">我的客户</router-link>\n        <router-link to=\"/customer/list\" tag=\"li\">全部客户</router-link>\n        <router-link to=\"/customer/add\"  tag=\"li\">新增客户</router-link>\n      </ul> -->\n\n      <el-menu\n        background-color=\"#545c64\"\n        text-color=\"#fff\"\n        class=\"el-menu-vertical-demo\"\n        active-text-color=\"#ffd04b\"\n        @select=\"select\"\n        :default-active=\"changeActive()\"\n        :default-openeds=\"['1']\"\n      >\n        <el-submenu index=\"1\">\n          <template slot=\"title\">\n            <i class=\"el-icon-location\"></i>\n            <span>导航一</span>\n          </template>\n          <el-menu-item-group>\n            <el-menu-item index=\"0\">\n              我的客户\n              <!-- <router-link>我的客户</router-link> -->\n            </el-menu-item>\n            <el-menu-item index=\"1\" v-power=\"flag\">\n              全部客户\n              <!-- <router-link>全部客户</router-link> -->\n            </el-menu-item>\n            <el-menu-item index=\"2\">\n              新增客户\n              <!-- <router-link>新增客户</router-link> -->\n            </el-menu-item>\n          </el-menu-item-group>\n        </el-submenu>\n      </el-menu>\n    </div>\n    <div class=\"right\">\n      <!-- :include=\"['add']\" include数组里有谁，那谁就会被缓存，可以控制缓存的范围    max是最大缓存数量，如果超过里这个数量，他就会把最久没有访问的组件实例销毁-->\n      <keep-alive :exclude=\"['add']\" :max=\"10\">\n        <router-view></router-view>\n      </keep-alive>\n      \n    </div>\n    <!-- 我是客户管理大组件 -->\n  </div>\n</template>\n\n<script>\n// import Vue from \"vue\";\n\nexport default {\n  data(){\n    return{\n      // arr:['a','b'],\n      flag:'allcustomer'\n    }\n  },\n  methods: {\n    select(index) {\n      // console.log(index);\n      let ary = [\n        \"/customer/list?type=my\",\n        \"/customer/list?type=all\",\n        \"/customer/add\",\n      ];\n      let path=ary[index]\n      let href=location.href;\n    //   如果前一次和后一次跳转的path是一样的那router会在控制台报错，为了解决这个问题，在路由跳转的时候，判断一下当前页面的url是否包含即将跳转的path值，如果一样，说明要跳转的是同一个组件，就直接return就好\n      if(href.includes(path))return\n      \n      this.$router.push(path); \n\n    },\n    changeActive(){\n      let url=location.href;\n      let [a,b]=url.split('#');\n      let [c,d]=b.split('?')\n      console.log(a,b,c,d);\n      if(b.includes('/customer/list')){\n        if(d==undefined||d==\"type=my\"){\n        return '0'\n      }else{\n        return '1'\n      }\n      /* if(d=='type=all'){\n        return '1'\n      } */\n      }\n      \n      return '2'\n    }\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  background: lightsalmon;\n  height: 100%;\n  display: flex;\n  .left {\n    width: 20%;\n    min-width: 200px;\n    height: 100%;\n    background: #545c64;\n  }\n  .right {\n    width: 80%;\n    height: 100%;\n    overflow: auto;\n  }\n}\n</style>"]}]}